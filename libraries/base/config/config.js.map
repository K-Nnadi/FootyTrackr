{"version":3,"file":"config.js","sourceRoot":"/","sources":["../libraries/base/config/config.ts"],"names":[],"mappings":";;;AAAA,gFAA0E;AAC1E,6CAA8C;AAC9C,2CAA4C;AAE5C,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;AAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAE,CAAA;AAEnB,QAAA,cAAc,GAAG,uBAAa,CAAC,YAAY,CAAC;IACrD,QAAQ,EAAE,8CAAqB;IAC/B,MAAM,EAAE,CAAC,8CAAqB,CAAC;CAClC,CAAC,CAAC;AAEU,QAAA,MAAM,GAAG,qBAAY,CAAC,OAAO,CAAC;IACvC,WAAW,EAAE,GAAG,KAAK,aAAa,CAAC,CAAC,CAAC,MAAM,CAAA,CAAC,CAAC,KAAK;IAClD,QAAQ,EAAE,IAAI;CACjB,CAAC,CAAA","sourcesContent":["import {ConfigServiceProvider} from \"../providers/configService.provider\";\r\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\r\nimport {ConfigModule} from \"@nestjs/config\";\r\n\r\nconst ENV = process.env.NODE_ENV;\r\n\r\nconsole.log(\"PROCESS.ENV\", ENV )\r\n\r\nexport const TYPEORM_CONFIG = TypeOrmModule.forRootAsync({\r\n    useClass: ConfigServiceProvider,\r\n    inject: [ConfigServiceProvider],\r\n});\r\n\r\nexport const CONFIG = ConfigModule.forRoot({\r\n    envFilePath: ENV === 'development' ? '.env': 'SUI',\r\n    isGlobal: true\r\n})"]}